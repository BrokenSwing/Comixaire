plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.jlink' version '2.23.1'
}

ext {
    appName = 'Comixaire'
    appLauncher = 'comixaire'
    appPackaging = 'comixaire'
    appModuleName = 'comixaire'
    appMainClass = 'com.github.brokenswing.comixaire.Comixaire'
}

group 'com.github.brokenswing'
version '1.0-SNAPSHOT'
mainClassName = "${ext.appModuleName}/${ext.appMainClass}"

java {
    sourceCompatibility = JavaVersion.VERSION_1_9
    targetCompatibility = JavaVersion.VERSION_1_9
}

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes(
                "Main-Class": mainClassName
        )
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/${appPackaging}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
    }
}

////////////////////////////////////////////////////
///////////// Executable generation ////////////////
////////////////////////////////////////////////////
/////////////    Broken !           ////////////////
////////////////////////////////////////////////////

//task cleanBinDir() {
//    new File("${buildDir}/bin").deleteDir()
//}
//
//task packageImage(type: Exec, dependsOn: [cleanBinDir, tasks.jlink]) {
//    commandLine 'jpackage',
//            '--runtime-image', "${buildDir}/image",
//            '--module', "${mainClassName}",
//            '-d', "${buildDir}/bin",
//            '--icon', "${projectDir}/assets/icon.ico",
//            '--win-per-user-install',
//            '--win-dir-chooser'
//}

javafx {
    version = "15.0.1"
    modules = ['javafx.controls', 'javafx.fxml']
}

test() {
    useJUnitPlatform()
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        environment '_JAVA_OPTIONS', '-Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw -Dprism.text=t2k'
    } else {
        environment '_JAVA_OPTIONS', '-Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw'
    }
}

dependencies {
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    implementation('org.controlsfx:controlsfx:11.0.3') {
        exclude group: 'org.openjfx'
    }

    testImplementation platform(group: 'org.junit', name: 'junit-bom', version: '5.7.0')
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.6.28'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.6.28'
    testImplementation group: 'org.testfx', name: 'testfx-junit5', version: '4.0.16-alpha'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.18.1'
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.7.0"
    testCompile "org.testfx:openjfx-monocle:8u76-b04"
}
