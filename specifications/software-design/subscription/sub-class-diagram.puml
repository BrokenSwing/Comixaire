@startuml

package controller {

  class SubscriptionController {
    -createSubscriptionButton: Button
    -startDate: DatePicker
    -cardId: String
    +createSubscription(): void
    +getClientSubscriptions(): void
  }

}

package subscription {
  class SubscriptionFacade {
    +create(String clientId, Date startDate): Subscription
    +getClientSubscriptions(String cardId): Subscription[]
  }
}

package dao {
  abstract class DAOFactory {
    +getSubscriptionDAO(): SubscriptionDAO
  }

  interface SubscriptionDAO {
    +findAllByCardId(String cardId): Subscription[]
    +create(Subscription subscription): void
  }

  package postgres {

    class PostgresSubscriptionDAO implements SubscriptionDAO {
      -connection: Connection
      +PostgresSubscriptionDAO(Connection: connection)
    }

    class PostgresDAOFactory extends DAOFactory {
      -connection: Connection
    }

  }

}

PostgresDAOFactory .left> PostgresSubscriptionDAO : "creates"
DAOFactory .left> SubscriptionDAO : "provides"

' Inter-packages relations

SubscriptionFacade -down-> DAOFactory
SubscriptionController --> SubscriptionFacade

@enduml
